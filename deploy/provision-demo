#!/bin/sh

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# dependencies
apt-get install -y ruby libsqlite3-dev ruby-dev
gem install bundler
cd $SCRIPTPATH/..
sudo -u ubuntu bundler install --deployment --without development

# configure demo
sudo -u ubuntu cp .env.sample .env
sed -i '' -e 's;AUTHN_URL=;\0https://authn.keratin.tech;' .env
sed -i '' -e 's;APP_DOMAINS=;\0demo.keratin.tech:443;' .env
sed -i '' -e "s;SECRET_KEY_BASE=;\0$(openssl rand -hex 64);" .env
sed -i '' -e "s;HTTP_AUTH_USERNAME=;\0$(openssl rand -hex 12);" .env
sed -i '' -e "s;HTTP_AUTH_PASSWORD=;\0$(openssl rand -hex 12);" .env
echo PRIVATE_AUTHN_URL=http://localhost:3000 >> .env
echo APP_PASSWORD_RESET_URL=https://demo.keratin.tech/password_resets >> .env
echo MAILGUN_API_KEY=$MAILGUN_API_KEY >> .env
echo MAILGUN_DOMAIN=mg.keratin.tech >> .env
echo SENTRY_DSN=$SENTRY_DSN >> .env
echo PROXIED=true >> .env
echo PUBLIC_PORT=3001 >> .env
echo GITHUB_OAUTH_CREDENTIALS=$GITHUB_OAUTH_CREDENTIALS >> .env

# passenger + nginx
apt-get install -y dirmngr gnupg
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
apt-get install -y apt-transport-https ca-certificates
sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'
apt-get update
apt-get install -y nginx-extras passenger
sed -i '' -e 's/# \(include.*passenger.conf\)/\1/' /etc/nginx/nginx.conf
service nginx restart

# add to nginx
ln -s $SCRIPTPATH/demo.keratin.tech /etc/nginx/sites-enabled/demo.keratin.tech
