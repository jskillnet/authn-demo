# secrets
MAILGUN_API_KEY=
SENTRY_DSN=

# passenger + nginx
sudo apt-get install -y dirmngr gnupg
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
sudo apt-get install -y apt-transport-https ca-certificates
sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'
sudo apt-get update
sudo apt-get install -y nginx-extras passenger
sudo sed -i '' -e 's/# \(include.*passenger.conf\)/\1/' /etc/nginx/nginx.conf
sudo service nginx restart

# build authn from source
sudo add-apt-repository -y ppa:masterminds/glide
sudo apt-get update
sudo apt-get install -y golang-1.9 glide
export GOPATH=~/go
export PATH=$PATH:~/go/bin:/usr/lib/go-1.9/bin/
go get github.com/keratin/authn-server
go get github.com/benbjohnson/ego/cmd/ego
cd ~/go/src/github.com/keratin/authn-server
# NOTE: `git checkout v1.0.0` to install a specific version
make clean generate vendor # TODO: sometimes fails?
make build
mkdir ~/bin
mv dist/authn ~/bin/authn

# provision demo
sudo gem install bundler
sudo apt-get install -y libsqlite3-dev ruby-dev
cd ~
mkdir authn-demo
git clone https://github.com/keratin/authn-demo
cd authn-demo
git checkout deploy
bundler install --deployment --without development

# configure demo
cp .env.sample .env
sed -i '' -e 's;AUTHN_URL=;\0https://authn.keratin.tech;' .env
sed -i '' -e 's;APP_DOMAINS=;\0demo.keratin.tech:443;' .env
sed -i '' -e "s;SECRET_KEY_BASE=;\0$(openssl rand -hex 64);" .env
sed -i '' -e "s;HTTP_AUTH_USERNAME=;\0$(openssl rand -hex 12);" .env
sed -i '' -e "s;HTTP_AUTH_PASSWORD=;\0$(openssl rand -hex 12);" .env
echo PRIVATE_AUTHN_URL=localhost:3000 >> .env
echo APP_PASSWORD_RESET_URL=https://demo.keratin.tech/password_resets >> .env
echo MAILGUN_API_KEY=$MAILGUN_API_KEY >> .env
echo MAILGUN_DOMAIN=mg.keratin.tech >> .env
echo SENTRY_DSN=$SENTRY_DSN >> .env

# run authn as daemon with systemd
cd ~
sudo ln -s authn-demo/deploy/authn.service /lib/systemd/system/authn.service
sudo systemctl enable authn.service
sudo systemctl start authn.service

# nginx sites
cd ~
sudo ln -s authn-demo/deploy/authn.keratin.tech /etc/nginx/sites-enabled/authn.keratin.tech
sudo ln -s authn-demo/deploy/demo.keratin.tech /etc/nginx/sites-enabled/demo.keratin.tech

# letsencrypt certbot
sudo add-apt-repository -y ppa:certbot/certbot
sudo apt-get update
sudo apt-get install -y python-certbot-nginx
# TODO: depends on opening 443 in the firewall
sudo certbot -n --agree-tos \
  --nginx \
  --redirect \
  -m lance@keratin.tech \
  -d demo.keratin.tech,authn.keratin.tech
